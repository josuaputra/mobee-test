#!/usr/bin/env bash

set -ex

case "$DRONE_BRANCH" in
master | staging-test)
    ENV=staging
	GKE_CLUSTER_NAME="brankas-demo-cluster"
    GCP_PROJECT_ID=o-branks-demo
    services=(frontend/ bff/ docs/ api/ idp/ usermgm/) 
    ;;
*)
	echo "Unknown environment '$1'" >&2
	exit 1
	;;
esac

if [[ -z $GOOGLE_APPLICATION_CREDENTIALS ]]; then
    echo '$GOOGLE_APPLICATION_CREDENTIALS missing' >&2
    exit 1
fi

if [[ -z $IMAGE_REGISTRY ]]; then
    echo 'IMAGE_REGISTRY environment var missing' >&2
    exit 1
fi

### set up auth for gcloud and kubectl on CI
gcloud auth activate-service-account --key-file "$GOOGLE_APPLICATION_CREDENTIALS" || exit 1
gcloud config set project $GCP_PROJECT_ID || exit 1
gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone asia-southeast1-b || exit 1
kustomize version
kubectl version

TAG=$(cat .tags)

for d in "${services[@]}"; do
	pushd "$d"
	IMAGE=$(cat image-name)
	pushd deploy/overlays/${ENV}
	kustomize edit set image "image-full-tag=${IMAGE_REGISTRY}/${IMAGE}:${TAG}"
	# the load_restrictor flag allows kustomize to reference files from outside the overlays directory
	# this is particularly used for referencing .envs/*.txt files
	kustomize build --load-restrictor=LoadRestrictionsNone | kubectl apply -f -

	popd
	popd
done